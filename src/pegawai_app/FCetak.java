
package pegawai_app;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

public class FCetak extends javax.swing.JFrame {

    ArrayList<Divisi> arrDivisi = new ArrayList<>();
    ArrayList<Pegawai> arrPegawai = new ArrayList<>();
    
    public FCetak() {
        initComponents();
        loadData();
        nonAktif();
        loadDivisi();
    }
    
    void loadData(){
        /*
        untuk mengambil data dari tabel, kemudian
        tampung pada class Divisi dan Pegawai
        */
        
        ResultSet rs;
        
        try {
            rs = DB.read("select * from divisi");
            
            //tampung kedalam class Divisi berupa array list
            if ( arrDivisi.size() > 0 ) 
                arrDivisi.removeAll(arrDivisi); //bersihkan
            
            //tampung 
            while( rs.next() ){
                arrDivisi.add(new Divisi(
                    Integer.parseInt( rs.getString("id_divisi") ),
                    Integer.parseInt( rs.getString("honor") ),
                    rs.getString("divisi")
                ));
            }
            
            //ambil data pegawai dan tampung kedalam class berupa array list
            rs = DB.read("select id_pegawai, nama from pegawai");
            
            //tampung kedalam class Divisi berupa array list
            if ( arrPegawai.size() > 0 ) 
                arrPegawai.removeAll(arrPegawai); //bersihkan
            
            //tampung 
            while( rs.next() ){
                arrPegawai.add(new Pegawai(
                    Integer.parseInt( rs.getString("id_pegawai") ),
                    rs.getString("nama")
                ));
            }
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog( null, ex.toString() );
        }
        
    }
    
    void loadDivisi(){
        //data yang ada pada array list diletakkan pada combo box
        cbx_dari.removeAllItems();
        cbx_hingga.removeAllItems();
        
        for (Divisi arrDivisi1 : arrDivisi) {
            cbx_dari.addItem(arrDivisi1.getId() + " - " + arrDivisi1.getDivisi());
            cbx_hingga.addItem(arrDivisi1.getId() + " - " + arrDivisi1.getDivisi());
        }
    }
    
    void loadPegawai(){
        //data yang ada pada array list diletakkan pada combo box
        cbx_dari.removeAllItems();
        cbx_hingga.removeAllItems();
        
        for (Pegawai arrPegawai1 : arrPegawai) {
            cbx_dari.addItem(arrPegawai1.getId() + " - " + arrPegawai1.getNama());
            cbx_hingga.addItem(arrPegawai1.getId() + " - " + arrPegawai1.getNama());
        }
    }
    
    void aktif(){
        cbx_dari.setEnabled( true );
        cbx_hingga.setEnabled( true );
    }
    
    void nonAktif(){
        cbx_dari.setEnabled( false );
        cbx_hingga.setEnabled( false );
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cbx_pilih = new javax.swing.JComboBox();
        cbx_dari = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        cbx_hingga = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        bt_cetak = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("PILIH");

        cbx_pilih.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "DIVISI - SEMUA", "DIVISI - FILTER", "PEGAWAI - SEMUA", "PEGAWAI - FILTER" }));
        cbx_pilih.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbx_pilihActionPerformed(evt);
            }
        });

        cbx_dari.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel2.setText("FILTER");

        cbx_hingga.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel3.setText("HINGGA");

        bt_cetak.setText("CETAK");
        bt_cetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_cetakActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbx_pilih, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3)
                    .addComponent(cbx_dari, 0, 122, Short.MAX_VALUE)
                    .addComponent(cbx_hingga, 0, 122, Short.MAX_VALUE)
                    .addComponent(bt_cetak, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cbx_pilih, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbx_dari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbx_hingga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bt_cetak)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cbx_pilihActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbx_pilihActionPerformed
        int idx = cbx_pilih.getSelectedIndex();
        
        if ( idx == 0 ){
            nonAktif();
            loadDivisi();
        }else if ( idx == 1 ){
            aktif();
            loadDivisi();
        }else if ( idx == 2 ){
            nonAktif();
            loadPegawai();
        }else{
            aktif();
            loadPegawai();
        }
    }//GEN-LAST:event_cbx_pilihActionPerformed

    private void bt_cetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_cetakActionPerformed
        //cetak laporan sesuai pilihan
        int idx = cbx_pilih.getSelectedIndex();
        String dir = System.getProperty("user.dir"); //lokasi project
        JasperPrint jp;
        
        if ( idx == 0 ){
            try {
                JasperCompileManager.compileReportToFile(
                        dir + "/src/pegawai_app/RDivisi.jrxml",
                        dir + "/src/pegawai_app/RDivisi.jasper");

                jp = JasperFillManager.fillReport(
                        getClass().getResourceAsStream("RDivisi.jasper"),
                        null,
                        DB.connectDB());

                JasperViewer.viewReport(jp, false);
            } catch (JRException | SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, ex.toString());
            }
        }else if( idx == 1 ){
            //fiter berdasarkan id_divisi
            try {
                JasperCompileManager.compileReportToFile(
                        dir + "/src/pegawai_app/RDivisiParameter.jrxml",
                        dir + "/src/pegawai_app/RDivisiParameter.jasper");

                //parameter
                Map parameters = new HashMap();
                int idx_dari = cbx_dari.getSelectedIndex();
                int idx_hingga = cbx_hingga.getSelectedIndex();
                
                parameters.put("p_dari", arrDivisi.get( idx_dari ).getId());
                parameters.put("p_hingga", arrDivisi.get( idx_hingga ).getId());
                
                jp = JasperFillManager.fillReport(
                getClass().getResourceAsStream("RDivisiParameter.jasper"),
                parameters,
                DB.connectDB());

                JasperViewer.viewReport(jp, false);
            } catch (JRException | SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, ex.toString());
            }
        }else if( idx == 2 ){
            try {
                JasperCompileManager.compileReportToFile(
                        dir + "/src/pegawai_app/RPegawai.jrxml",
                        dir + "/src/pegawai_app/RPegawai.jasper");

                jp = JasperFillManager.fillReport(
                        getClass().getResourceAsStream("RPegawai.jasper"),
                        null,
                        DB.connectDB());

                JasperViewer.viewReport(jp, false);
            } catch (JRException | SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, ex.toString());
            }
        }else{
            //fiter berdasarkan id_pegawai
            try {
                JasperCompileManager.compileReportToFile(
                        dir + "/src/pegawai_app/RPegawaiParameter.jrxml",
                        dir + "/src/pegawai_app/RPegawaiParameter.jasper");

                //parameter
                Map parameters = new HashMap();
                int idx_dari = cbx_dari.getSelectedIndex();
                int idx_hingga = cbx_hingga.getSelectedIndex();
                
                parameters.put("p_dari", arrPegawai.get( idx_dari ).getId());
                parameters.put("p_hingga", arrPegawai.get( idx_hingga ).getId());
                
                jp = JasperFillManager.fillReport(
                getClass().getResourceAsStream("RPegawaiParameter.jasper"),
                parameters,
                DB.connectDB());

                JasperViewer.viewReport(jp, false);
            } catch (JRException | SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, ex.toString());
            }
        }
    }//GEN-LAST:event_bt_cetakActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FCetak.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FCetak.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FCetak.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FCetak.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FCetak().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_cetak;
    private javax.swing.JComboBox cbx_dari;
    private javax.swing.JComboBox cbx_hingga;
    private javax.swing.JComboBox cbx_pilih;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables

}
